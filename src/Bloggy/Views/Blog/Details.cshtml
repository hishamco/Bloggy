@using Bloggy
@using Bloggy.Models
@using Bloggy.Extensions
@using Microsoft.Extensions.Options

@model Post

@inject IOptions<AppSettings> AppSettings

@{
    ViewBag.Title = Model.Slug;
}

@functions
{
    public Blog Blog
    {
        get
        {
            return AppSettings.Value.Blog;
        }
    }
}

<article class="row">
    <h2><a href="#">@Model.Title</a></h2>
    <time>@Model.PublishedAt.ToString("MMMM dd, yyyy")</time>
    <span id="tags"><a href="#">#@Model.Tags</a></span>
    <markdown>@Model.Content</markdown>
</article>

    <div id="comments">
        <h3>@Model.Comments.Count() Comments</h3>
        @foreach (var comment in Model.Comments)
        {
            <div class="comment">
                <gravatar email="@comment.Email" />
                <div>
                    <h4><a href="@(comment.Website ?? "#")">@comment.Author</a></h4>
                    <time>@comment.PublishedAt.ToString("MMMM dd, yyyy")</time>
                    <p markdown>@Html.Raw(comment.Content)</p>
                </div>
            </div>
        }
    </div>

@if (Blog.AllowComments && (DateTime.Now - Model.PublishedAt).Days <= Blog.DaysToComment)
{
    if (ViewContext.IsPost() && ViewData.ModelState.IsValid)
    {
        <alert type="Success">@TempData["Message"]</alert>
    }
    else
    {
        <partial name="_CommentFormPartial" model="new Comment()" />
    }
}